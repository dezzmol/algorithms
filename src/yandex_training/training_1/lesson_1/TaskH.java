package yandex_training.training_1.lesson_1;

import java.util.Scanner;

/**
 * На некоторых кросс-платформенных станциях метро (как, например, «Третьяковская») на разные стороны платформы приходят поезда разных направлений.
 * Таня договорилась встретиться с подругой на такой станции, но поскольку подруга приехала из другого часового пояса,
 * то из-за джетлага сильно проспала, и Тане пришлось долго её ждать.
 * Поезда всегда ходят точно по расписанию, и Таня знает, что поезд стоит на платформе ровно одну минуту,
 * а интервал между поездами (время, в течение которого поезда у платформы нет) составляет a минут для поездов на первом пути и b минут для поездов на втором пути.
 * То есть на первый путь приезжает поезд и стоит одну минуту, затем в течение a минут поезда у платформы нет,
 * затем в течение одной минуты у платформы стоит следующий поезд и т. д.
 * Пока Таня стояла на платформе, она насчитала n поездов на первом пути и m поездов на втором пути.
 * Определите минимальное и максимальное время, которое Таня могла провести на платформе, или сообщите, что она точно сбилась со счёта.
 * Все поезда, которые видела Таня, она наблюдала в течение всей минуты,
 * то есть Таня не приходит и не уходит с платформы посередине той минуты, когда поезд стоит на платформе.
 * Первая строка входных данных содержит число a — интервал между поездами на первом пути.
 * Вторая строка содержит число b — интервал между поездами на втором пути.
 * Третья строка содержит число n — количество поездов на первом пути, которые увидела Таня.
 * Четвёртая строка содержит число m — количество поездов на втором пути, которые увидела Таня.
 * Все числа — целые, от 1 до 1000.
 */
public class TaskH {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int n = scanner.nextInt();
        int m = scanner.nextInt();

        int minA = (n + (n - 1) * a);
        int minB = (m + (m - 1) * b);
        int maxA = minA + 2 * a;
        int maxB = minB + 2 * b;

        if (Math.min(maxA, maxB) < Math.max(minA, minB)) {
            System.out.println(-1);
            return;
        }
        System.out.println(Math.max(minA, minB) + " " + Math.min(maxA, maxB));
    }
}
